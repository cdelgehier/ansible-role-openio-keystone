# roles/keystone/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Ensure directories exists
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('openio') }}"
    group: "{{ item.group | default('openio') }}"
    mode: "{{ item.mode | default(0755) }}"
  with_items:
    - path: "/etc/gridinit.d/{{ openio_keystone_namespace }}"
    - path: "{{ openio_keystone_sysconfig_dir }}/keystone-{{ openio_keystone_serviceid }}"
  tags: install

- name: 'Install configuration files keystone-paste.ini'
  copy:
    src: keystone-paste.ini
    dest: "{{ openio_keystone_config_dir }}/keystone-paste.ini"
    owner: root
    group: "{{ openio_keystone_system_group_name }}"
    mode: '0640'
  tags: configure

- name: 'Install configuration files keystone.conf'
  template:
    src: keystone.conf.j2
    dest: "{{ openio_keystone_config_dir }}/keystone.conf"
    owner: root
    group: "{{ openio_keystone_system_group_name }}"
    mode: '0640'
  tags: configure

- import_tasks: db_setup.yml
  tags: configure
  when: not openio_keystone_provision_only

- import_tasks: fernet.yml
  when:
    - "'fernet' in openio_keystone_token_provider"

- import_tasks: credentials.yml

- name: Generate configuration files (uwsgi)
  template:
    src: "keystone-uwsgi.ini.j2"
    dest: "{{ openio_keystone_sysconfig_dir }}/keystone-{{ openio_keystone_serviceid }}/{{ item }}.ini"
    mode: "0644"
  with_items: "{{ openio_keystone_wsgi_program_names }}"
  register: _uwsgi_conf

- name: Generate configuration files (gridinit)
  template:
    src: "gridinit_keystone.conf.j2"
    dest: "{{ openio_keystone_gridinit_dir }}/{{ openio_keystone_gridinit_file_prefix }}\
      keystone-{{ openio_keystone_serviceid }}.{{ item.0 }}.conf"
    mode: "0644"
  with_indexed_items: "{{ openio_keystone_wsgi_program_names }}"
  register: _gridinit_conf

- name: restart keystone
  shell: |
    gridinit_cmd reload
    gridinit_cmd restart  {{ openio_keystone_namespace }}-{{ openio_keystone_servicename }}.0
    gridinit_cmd restart  {{ openio_keystone_namespace }}-{{ openio_keystone_servicename }}.1
  register: _restart_keystone
  when:
    - _uwsgi_conf is changed or _gridinit_conf is changed
    - not openio_keystone_provision_only

- block:
    - name: "Ensure keystone is started"
      command: "gridinit_cmd start {{ openio_keystone_namespace }}-{{ openio_keystone_servicename }}.0 \
        {{ openio_keystone_namespace }}-{{ openio_keystone_servicename }}.1"
      register: _start_keystone
      changed_when: '"Success" in _start_keystone.stdout'
      when:
        - not openio_keystone_provision_only
        - _restart_keystone is skipped
      tags: configure
  when: openio_bootstrap | d(false)

- import_tasks: bootstrap.yml
  when:
    - not openio_keystone_provision_only
    - _db_sync_check.rc is defined and _db_sync_check.rc | int == 2
    - "(not openio_keystone_bootstrap_all_nodes and inventory_hostname == groups[openio_keystone_nodes_group][0]) \
      or openio_keystone_bootstrap_all_nodes"
  tags: configure

- import_tasks: postinstall.yml
  tags: configure

- import_tasks: identities_create.yml
  tags: configure
  when: not openio_keystone_provision_only
...
